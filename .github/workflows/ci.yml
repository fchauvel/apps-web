name: Test and Package

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  create:
    tags:
      "*"

env:
   APP_NAME: "apps-web"
   ARTIFACT_REPOSITORY: "ax-repo"
   CLUSTER: "ax-cluster"
   PROJECT_ID: "apps-394206"
   REGION: "europe-north1"
   SERVICE_ACCOUNT: ${{ secrets.GPC_SERVICE_ACCOUNT }}
   WORKLOAD_PROVIDER: ${{ secrets.GPC_WORKLOAD_PROVIDER }}
   
jobs:

  test:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: '18'
      
    - name: Install Dependencies
      run: |
        npm install .
    
    - name: Test
      run: |
        npx vitest --run

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    
    runs-on: ubuntu-22.04

    needs: test

    permissions:
      contents: 'read'
      id-token: 'write'

    outputs:
      image: ${{ steps.getImage.outputs.image }}
      
    steps:
    - uses: actions/checkout@v3

    - id: getImage
      name: Compute the qualified image name and tag
      run: |
        TAG=$(git describe --tags --abbrev=0)
        QUALIFIED_NAME="${REGION}-docker.pkg.dev/${PROJECT_ID}/${ARTIFACT_REPOSITORY}/${APP_NAME}"
        echo "image=${QUALIFIED_NAME}:${TAG}" >> ${GITHUB_OUTPUT}

    - id: auth
      name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v0
      with:
        token_format: access_token
        workload_identity_provider: ${{ secrets.GPC_WORKLOAD_PROVIDER }}
        service_account: ${{ secrets.GPC_SERVICE_ACCOUNT }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
        access_token_lifetime: 300s

    - name: Login to Artifact Registry
      uses: docker/login-action@v1
      with:
        registry: europe-north1-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - id: docker-push-tagged
      name: Tag Docker image and push to Google Artifact Registry
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: |
          ${{ steps.getImage.outputs.image }}

  deploy:
    runs-on: ubuntu-22.04
    needs: publish

    permissions:
      contents: 'read'
      id-token: 'write'
      
    steps:
    - uses: actions/checkout@v3
      
    - id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ secrets.GPC_WORKLOAD_PROVIDER }}
        service_account: ${{ secrets.GPC_SERVICE_ACCOUNT }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
        
    - name: Get GKE Credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.CLUSTER }}
        location: ${{ env.REGION }}
        credentials: ${{ secrets.GPC_SERVICE_ACCOUNT_KEY }}

    - name: Deploy New Image
      env:
        APPS_WEB_IMAGE: ${{ needs.publish.outputs.image }}
      run: |
        echo "Image: ${APPS_WEB_IMAGE}"
        kubectl set image deployments/apps-web apps-web="${APPS_WEB_IMAGE}"
        kubectl rollout status deployments/apps-web
        kubectl get pods
